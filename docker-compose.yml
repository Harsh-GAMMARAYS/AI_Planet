
services:
  postgres:
    image: postgres:15
    container_name: ai_planet_postgres
    environment:
      POSTGRES_DB: ai_planet
      POSTGRES_USER: ai_planet_user
      POSTGRES_PASSWORD: ai_planet_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  chromadb:
    image: chromadb/chroma:latest
    container_name: ai_planet_chromadb
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8001
    ports:
      - "8001:8001"
    volumes:
      - chromadb_data:/chroma/chroma
    restart: unless-stopped

  neo4j:
    image: neo4j:5.15
    container_name: ai_planet_neo4j
    environment:
      - NEO4J_AUTH=neo4j/ai_planet_password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    restart: unless-stopped

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai_planet_api
    environment:
      - DATABASE_URL=postgresql://ai_planet_user:ai_planet_password@postgres:5432/ai_planet
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8001
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=ai_planet_password
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - chromadb
      - neo4j
    volumes:
      - ./backend:/app
    restart: unless-stopped

volumes:
  postgres_data:
  chromadb_data:
  neo4j_data:
  neo4j_logs:
